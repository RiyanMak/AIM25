import 'dart:convert';
import 'dart:typed_data';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import '../models/detection_result.dart';

class ApiService {
  // Hardcoded URL for testing - using your specific IP
  static final String baseUrl = 'http://192.168.130.2:8080';
  
  // Debug function to log network activity
  static void _log(String message) {
    debugPrint('API SERVICE: $message');
  }

  // Health check with better error logging
  static Future<bool> checkApiHealth() async {
    _log('Checking API health at $baseUrl/health');
    try {
      final response = await http.get(
        Uri.parse('$baseUrl/health'),
      ).timeout(const Duration(seconds: 5));
      
      _log('Health check response: ${response.statusCode}');
      return response.statusCode == 200;
    } catch (e) {
      _log('Health check error: $e');
      return false;
    }
  }

  // Send image to API for processing
  static Future<DetectionResult?> detectDisorders(Uint8List imageBytes) async {
    _log('Sending image for processing (${imageBytes.length} bytes)');
    try {
      // Convert image to base64
      final String base64Image = base64Encode(imageBytes);
      
      // Create request body
      final Map<String, dynamic> requestBody = {
        'image': base64Image,
      };

      _log('Sending request to $baseUrl/detect');
      // Send POST request to API
      final response = await http.post(
        Uri.parse('$baseUrl/detect'),
        headers: {
          'Content-Type': 'application/json',
        },
        body: jsonEncode(requestBody),
      ).timeout(const Duration(seconds: 30));

      _log('Detect response: ${response.statusCode}');
      
      if (response.statusCode == 200) {
        // Parse response
        final Map<String, dynamic> data = jsonDecode(response.body);
        return DetectionResult.fromJson(data);
      } else {
        _log('API Error: ${response.statusCode} - ${response.body}');
        return null;
      }
    } catch (e) {
      _log('Detect error: $e');
      return null;
    }
  }
}
